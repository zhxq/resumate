{
    "name": "zh_cn",
    "type": "lang",
    "vars":{
        "introductiontoresumatetitle": "Resumate入门",
        "codeforthispage": "本page代码",
        "codeforthisblock": "本block代码",
        "pagesintrotitle": "页面编写",
        "pagesintroline1": "在简介当中，我们已经介绍了如何进行页面配置文件的编写：定义<code>name</code>作为该文件的标识符、<code>type</code>定义了配置文件类型、<code>content</code>这个list定义了引用的内容列表，以及最后的<code>vars</code>作为dict代表着应用给本文件和所有引用文件的宏默认值。",
        "pagesintroline2": "现在我们来从头搭建一个新的页面吧作为例子吧。假设说我们想要建设一个页面<code>page1</code>，其中有三个部分——分别叫做<code>blocka</code>, <code>blockb</code>和<code>blockc</code>。这是一种比较好的代码模式，因为我们将不同部分分离，这样能够保证page文件不会过大，在维护的时候不会出现太多问题。那么我们可以这么定义一个带有主标题，下方是各个block内容的<code>page1</code>：",
        "pagesintroline3": "我们再来看看<code>blocka</code>的代码——<code>blockb</code>和<code>blockc</code>同理，只需要把配置文件的<code>name</code>、文件名和<code>content</code>中引用的更多内容修改一下就可以了。",
        "pagesintroline4": "现在让我们来介绍一些更高级的用法。假设说我们需要在页面当中引入一些JS函数和CSS层叠样式表，那么我们可以通过<code>js</code>和<code>css</code>两个list来定义引用JS和CSS的文件列表。Resumate会自动将所有JS文件预先加载后，再加载Resumate解析出来的HTML至页面上，防止出现加载HTML内容时所需的JS文件未加载成功的情况。为了防止渲染时网络导致的加载速度过慢，在HTML加载的时候才会加载CSS文件（会在Resumate渲染的HTML开头加入<code>&lt;link&gt;</code>来加载CSS文件）。<code>js</code>和<code>css</code>两个list在页面、块、模板和HTML定义当中均可使用，支持本地或者远程文件，且位于同一个地址的JS/CSS文件只会加载一次。",
        "pagesintroline5": "在这里，我们会引用./file1.js（位于./definition/pages/js/file1.js）和外部来自example.com的js。注意：Resumate会自动检查JS和CSS的URL是//，http://或者https://开头。若如此，那么其会认为这是绝对路径——否则的话会认为是在引用本JS/CSS的定义文件所在目录下的文件。同理，这里也会引用example.com的some.css以及一个位于./definition/pages/css的my.css。在加载这些JS和CSS文件的时候，请不要假设其会按顺序载入，但是Resumate渲染出来的HTML文件一定会在所有引用的JS文件加载后才会加载至页面。如果想要在页面完全加载后执行一些JS代码，那么可以考虑在页面最后加入一个<code>&lt;script&gt;</code>——用纯字符串格式来写或者是引用Resumate带的HTML定义均可。一个使用外部js的例子是本站的<code>jsoncode</code>模板，代码可以在<a href=\"https://github.com/zhxq/resumate/blob/master/definitions/templates/jsoncode.json\">这里</a>找到供君参考。",
        "htmlintroductiontitle": "HTML - 手册",
        "htmlintroductionbasicstitle": "HTML - 简介",
        "htmlintroductionbasicsline1": "HTML是Resumate，同时也是所有网站的最底层语言。其作为标记语言，会被浏览器最终渲染成访问者见到的页面。Resumate的JSON最终也会被渲染成HTML，呈递给最终用户，由用户的浏览器渲染成最终的样子。因此，我们需要对Resumate定义一些最底层的HTML元素，这样才能将所有的JSON配置文件翻译成需要的HTML格式。",
        "htmlintroductionbasicsline2": "类似于页面、块和模板文件，HTML定义文件也有一些必要的信息在里面。<code>name</code>和<code>type</code>还有<code>content</code>仍然非常重要。对于HTML定义来说，其还多出来了一个<code>attr</code>可以定义一些HTML属性（比如链接的href等），另外还有<code>close</code>布尔值表示这个标签是否需要关闭（比如<code>&lt;a&gt</code>和<code>&lt;div&gt</code>需要关闭，而<code>&lt;img&gt</code>不需要）。请参考下面对<code>p</code>标签的定义：",
        "htmlintroductionbasicsline3": "但是有一点要注意：在从其它地方引用HTML定义时，传递的<code>content</code>需要是一个JSON list——因为HTML定义中的<code>content</code>和页面、块和模板文件中的<code>content</code>比有一点点不同，HTML定义中的<code>content</code>其支持一定程度的修饰性循环，使其有更高程度的灵活性，并且使得部分定义更加易用（比如<code>table</code>或者<code>ul</code>这种有大量相同格式内部元素的标签）。请参考下面对<code>ul</code>标签的定义：",
        "htmlintroductionbasicsline4": "可以看到，在<code>ul</code>的定义中，我们省去了按照普通HTML中需要在里面用<code>li</code>来表明每一项。在引用<code>ul</code>的时候，只需要添加类似如下引用就可以轻而易举获得一行一行的内容了：",
        "htmlintroductionbasicsline5": ["在<code>ul</code>的<code>content</code>中，我们可以看到其在引用<code>$content$</code>时自动在其前后添加<code>&lt;li&gt;</code>和<code>&lt;/li&gt;</code>来表明这是<code>ul</code>当中的一项。主页中的<b>", "$samplecodeexplain$", "</b>部分就是用类似如此的语法写成的。"],
        "introductiontoresumateoutofboxtitle": "开箱使用",
        "introductiontoresumateoutofboxline1": "想要开箱使用Resumate？使用方法非常简单。Resumate自带多语言支持，所以您可以在您需要的语言文件（位于./definition/lang）中定义您需要的多语言字符串。您可以参考位于./definitions/pages和./definitions/blocks内的配置来编写自己的站点——照猫画虎、付诸实践是学习一门工具的最佳途径。",
        "introductiontoresumateoutofboxline2": "在编写好自己的配置文件之后，您需要修改一下<code>settings.json</code>来修改一下站点设置。在其中您可以修改站点标题、SEO内容、菜单选项（引用的页面文件），和支持的语言列表。",
        "introductiontoresumateoutofboxline3": "菜单设置是由<code>menu</code>这个dict来控制的。其中每个键名都是会引用的文件名（文件名要以.json结尾，比如“home”这个键名就会引用home.json）。<code>readable</code>选项控制了其在菜单上显示的文字、<code>right</code>布尔值选项显示其是否显示在菜单右侧。<code>dropdown</code>作为可选的key，内容为一个dict，其中每个键名仍为引用的文件名，<code>readable</code>仍然控制了其在菜单上的显示文字。",
        "introductiontoresumateoutofboxline4": "在配置文件中，几乎所有的值都支持多语。比如您在两门语言中都定义了名为<code>somestring</code>的字符串，您只需要在配置文件中引用<code>\"$somestring$\"</code>即可自动根据语言来显示正确的字符串。在写其它配置文件的时候，想引用某个多语言字符串也是类似的用法。",
        "introductiontoresumateoutofboxline5": "如果仍然搞不清楚配置文件应该如何编写，欢迎您读取本页和本页各块的代码，也欢迎您来查看原作者个人网站的定义文件代码。",
        "introductiontoresumatebasicstitle": "Resumate入门",
        "introductiontoresumatebasicsline1": "Resumate是一个用JSON编写个人主页的利器。您无需会任何代码，只需要按照一定规则引入一些已有的模板就可以开始使用了——当然，如果您对扩展Resumate有兴趣，那么也完全可以定义更多模板。",
        "introductiontoresumatebasicsline2": "Resumate分四种<i>可被渲染的</i>配置文件，从大到小分别为：page（页面）, block（块）, template（模板）和html. 它们的语法都很类似（尤其是前三种）。对于每一个JSON配置文件，其都要定义文件名、类型，以及可选的内容和宏（类似于变量）定义部分。不同种类的配置文件应该放置于不同的位置：页面文件应该放置于<code>./defintions/pages</code>、块文件应该放置于<code>./defintions/blocks</code>、模板文件应该放置于<code>./defintions/templates</code>、以及html定义文件应该放置于<code>./defintions/html</code>。一个基本的Resumate页面文件如下所示，其在<code>content</code>当中定义了对其它block/template/HTML标签的<i><b><span style=\"color: red;\">引用</span></b></i>：",
        "introductiontoresumatebasicsline3": ["刚刚的文件定义了一个叫做<code>newpage</code>的页面文件（文件中的<code>name</code>值要和文件名相同——比如该文件需要命名为newpage.json，放置于./definitions/pages目录下），会被访问者作为正常网页的形式看到。其在<code>content</code>中定义了按顺序<i><b><span style=\"color: red\">引用</span></b></i>一个带有html的字符串、一个写着“This is a link”且指向http://example.com/的链接、两段JSON的高亮渲染（就像上面你看到的），以及一个叫做someblock的block块。Resumate的字符串也可以直接用来写HTML，且最终会被渲染。对于引用其它Page, Block或者Template时传递的宏来说，如果数组里只有一个字符串元素，那么可以直接传递字符串即可（而无需传递一个只有该字符串的list）。当引用HTML标签定义（比如如上的<code>&lt;a&gt;</code>）时，<code>content</code>必须是一个list——原因请参见<i>", "$sitemenuhtmldoc$", "</i>部分（见菜单）。"],
        "introductiontoresumatebasicsline4": "对于页面、块和模板文件来说，<code>content</code>（list格式）是非常重要的。其定义了您如何引用已有的page, block, template或者html。",
        "introductiontoresumatebasicsline5": "上面的文件也包括了一些宏定义：在JSON最下方，根部的<code>vars</code>里定义了两个会对本文件全部部分有效的宏——如果引用本page文件的配置文件已经在引用本page时定义了这两个宏，那么本文件当中的宏会被忽略；如果有哪个没有被定义过，那么其值就会生效（换言之，在这里定义了其默认值）。假设A文件引用了B文件、B文件引用了C文件，且A文件和B文件都定义了同一个宏名，那么A文件中定义的宏值会在解析B和C文件时生效（换言之，在B中的定义会被忽略）。语言文件当中定义的宏值会在解析任何配置文件之前就被渲染器读取，所以其值会全局有效（换言之，在语言文件中定义的宏值可以被任何页面引用）。在<code>content</code>当中，我们引用了一些block、template和html标签，且可以向他们传递我们已有的宏、一个普通的字符串值，或者一个对别的page/block/template或者html的引用（会被解析成html后当做一个字符串传递）。",
        "introductiontoresumatetemplatestitle": "模板",
        "introductiontoresumatetemplatesline1": "模板是Resumate的核心。通过抽象化的模板，我们可以复用很多小工具（比如格式化过的个人学术论文列表，或者能自动渲染代码的位置）。这样写出来的代码作为一个个小模块，可以被重复利用，甚至也可以轻而易举地分享给其它用户使用。",
        "introductiontoresumatetemplatesline2": "下面是本站经常使用的<code>titlewdiv</code>模板，其内容是一个<code>&lt;div&gt;</code>html标签，其中按顺序包括了一个<code>&lt;h3&gt;</code>html元素用于标题和一个<code>cdiv</code>模板。",
        "introductiontoresumatetemplatesline3": "看到内部大量引用了<code>twd_template_</code>开头的宏了么？这些将会是该模板以后会用到的内容，在解析成html时会从环境中获取并替换成真正的内容。在建立模板的时候，建议为模板引用的宏名前面加上一定的前缀（比如刚才的<code>twd_template_</code>），以防万一出现宏名称冲突的情况。若有些宏是可选的，或者您希望对该宏进行默认值的定义，那么可以考虑在模板定义根部按照如上各式添加<code>vars</code> dict。",
        "introductiontoresumatetemplatesline4": "当从其他页面、块或者模板（引用者）引用<code>titlewdiv</code>模板（被引用者）的时候，将以下内容放入引用者配置文件的<code>content</code> list就可以引用<code>titlewdiv</code>模板了：",
        "introductiontoresumatetemplatesline5": [
            "在这里，我们传递给了模板两个宏和对应的值：<code>twd_template_title</code>和<code>twd_template_paragraph</code>. 前者的值为<code>\"$codeforabove$\"</code>，即<code>codeforabove</code>宏内的值。后者则是一个list，里面按照顺序有以下内容：",
            {
                "name": "ul",
                "content": [
                    "<code>outofboxtemplates</code>宏的值、",
                    "一个字符串，内容为<code>\" ...and let's see some code!\"</code>、",
                    "一个<code>jsoncode</code>模板，对其定义了两个宏<code>jc_template_json_id</code>（json渲染部分的html id）和<code>jc_template_json</code>（要渲染的json字符串）、",
                    "一个字符串，内容为<code>\"&lt;br&gt;&lt;br&gt;...and that is the end of that chapter.\"</code>。"
                ]
            }
        ],
        "constructing": "在建中",
        "constructing...": "在建中……",
        "outofboxtemplates": "自带模板",
        "writingtemplates": "编写新模板",
        "resumatesitetitle": "Resumate - 用JSON来写你的页面！",
        "introline1": "灵活、以内容为中心的个人网站",
        "introline2": "用JSON编写的模板和内容来渲染你的网站界面",
        "sitemenutitle": "Resumate",
        "sitemenuhome": "主页",
        "sitemenubasics": "入门教程",
        "sitemenusitesdoc": "站点制作",
        "sitemenutemplatesdoc": "模板制作",
        "sitemenuhtmldoc": "底层HTML",
        "whatisresumate": "什么是Resumate?",
        "resumateintro": "Resumate是一种利用JSON编写的模板来渲染页面的方式，其对于同样内容出现多次（如自己的学术著作列表）而又很少更新的页面来说十分快捷。举个例子：为了按照一定的格式在网站上显示自己的十篇学术著作，那么需要用HTML编写十次相同的格式代码而放入不同内容——但是通过Resumate，只需要快捷地引用一个模板十次来填写内容就可以了。同时，Resumate支持多语言和不同种类的页面风格主题，所以不用担心支持多语种页面或站点外观的问题。<br><br>你也可以在<a href=\"https://github.com/zhxq/resumate/blob/master/definitions/pages/home.json\">这里</a>找到本主页页面的JSON文件定义。",
        "educationexp": "例子：教育经历",
        "educationphdstart": "哈佛大学法学院 法学博士 导师：",
        "educationexampleprof": "Professor R. Sumate",
        "educationphdend": " (2014-2019)",
        "educationms": "耶鲁大学 计算机硕士 (2012-2014)",
        "educationbachelor": "布朗大学 数学系理学士 (2008-2012)",
        "educationdescription": "以上（包括本行）渲染自Resumate的<code>education</code>模板。在这个部分中，我只需要提供五个宏，分别为<code>edu_template_title</code>, <code>edu_template_phd</code>, <code>edu_template_master</code>, <code>edu_template_bachelor</code>以及<code>edu_template_comment</code>。格式已经由编写者编写好了——自己只需要拿来使用即可。",
        "codeforabove": "上面例子的代码",
        "samplecodeexplain": "代码解释",
        "samplecodeexplainmain": [
            "上面的代码表示引用了<code>education</code>模板，并且根据模板的定义给了模板上面所述五个宏。在Resumate解析模板的时候，其会根据定义引用正确的宏，然后显示在页面上。",
            {
                "name": "ul",
                "attr": {
                    "style": {
                        "text-align": "left"
                    }
                },
                "content": [
                    ["<code>edu_template_title</code>是这个段落的标题，其引用了<code>$educationexp$</code>宏——Resumate中的宏引用以$符号开头和结尾。这个宏的定义在语言文件里，会根据不同的语言来显示不同的文本。在本语言里，其值为：“", "$educationexp$", "”，程序在经过解析后会自动将宏替换成预定义的内容。"],
                    ["<code>edu_template_phd</code>是显示自己博士生经历的位置。在这里，我们提供了一个list。这个list也会被Resumate解析——其引用了<code>$educationphdstart$</code>宏、一个<code>link</code>模板（一个基于<code>&lt;a&gt;</code>的，用于显示链接的模板）、以及最后的<code>$educationphdend$</code>宏。在将该list解析成html字符串后，这个html字符串会作为<code>edu_template_phd</code>传递给解析器继续解析<code>education</code>模板。另外一种写法是将list替换成一句html字符串——Resumate会透明地传递html。"],
                    ["<code>edu_template_ms</code>是显示自己硕士经历的位置。类似于<code>edu_template_title</code>，这里会将<code>$educationms$</code>宏的值交给<code>edu_template_ms</code>。"],
                    ["<code>edu_template_bachelor</code>是显示自己学士经历的位置。类似于<code>edu_template_title</code>，这里会将<code>$educationbachelor$</code>宏的值交给<code>edu_template_bachelor</code>。"],
                    ["<code>edu_template_comment</code>是一个可以用来说一些话的段落。类似于<code>edu_template_title</code>，这里会将<code>$educationdescription$</code>宏的值交给<code>edu_template_comment</code>。"]
                ]
            },
            "在解析了模板并且引用了宏值后，生成的html代码会被输出，然后被浏览器渲染。"
        ]
    }
}